/* #region MARK:mesh-gradients */

canvas#my-canvas {
	height: 100vh;
	width: 100vw;
}

/* #endregion */

body {
	display: grid;
	grid-template-columns:
		minmax(0, calc(100vw - (843px / 2))) minmax(3.5rem, auto) minmax(
			min-content,
			calc(100vw - 2rem)
		)
		minmax(3.5rem, auto) minmax(0, calc(100vw - (843px / 2)));
	grid-template-rows: 6rem minmax(max-content, 1fr) minmax(
			5rem,
			max-content
		);
	justify-content: center;
	align-items: stretch;
	max-height: 100dvh;
	overflow: hidden;
	background: none !important;

	&::after {
		/* content: ''; */
		display: block;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: #000;
		opacity: 50%;
		z-index: -1;
	}
}

/* MARK: Header */

header {
	grid-column: 2 / -2 !important;
	grid-row: 1 / 2;
	display: grid;
	grid-template-columns: subgrid;
	grid-template-rows: subgrid;
	align-items: center;
	justify-content: space-between;
}

.logo {
	grid-column: 1 / 2 !important;
	grid-row: 1 / 2;
}

.favorite {
	grid-column: 3 / 4 !important;
	grid-row: 1 / 2;
	justify-self: end;
}

figure {
	grid-column: 1 / -1 !important;
	grid-row: 2 / 3;
	width: clamp(283px, calc(100vw - 2rem), 843px);
	place-self: center;
  height: 100%;
	/* display: grid;
	grid-template-columns: subgrid;
  grid-template-rows: 1fr min-content;
	justify-content: center;
	align-items: stretch; */
	max-height: calc(100dvh - 6rem);
}

.image-wrapper {
	display: flex;
	align-items: center;
	justify-content: center;
	grid-row: 1 / 2;
	grid-column: 2 / 5;
	max-height: fit-content;
	img {
		border: 0.5px solid #aaa;
		border-top: 0.5px solid #ddd;
	}
}

figcaption {
	display: grid;
	grid-row: 2 / 3;
	grid-column: 2 / 5;
	grid-template-columns: subgrid;
	grid-template-rows: subgrid;
	justify-content: space-around;
	align-items: center;
}

.toolbar {
	grid-row: 2 / 3;
	display: flex;
	justify-content: space-around;
	width: clamp(281px, calc(100% + 6rem), calc(100vw - 2rem));
}

.artist {
	grid-column: 1 / -1;
	grid-row: 3 / 4;
}

footer {
	grid-column: 1 / -1 !important;
	grid-row: -2 / -1;
	text-align: center;
	display: flex;
	justify-content: space-between;
	align-items: flex-end;
	padding: 1.5rem 1rem;
}

/* shades of a color variable */
html {
	/*
  TODO: create variable `--base-gray` in component; use here to create shades of gray
  */
	--base-gray: oklch(12.94% 0.02 159);

	--gray-1: var(--base-gray);
	--gray-2: oklch(from var(--base-gray) calc(l + 0.1) c h);
	--gray-3: oklch(from var(--base-gray) calc(l + 0.2) c h);
	--gray-4: oklch(from var(--base-gray) calc(l + 0.3) c h);
	--gray-5: oklch(from var(--base-gray) calc(l + 0.4) c h);
	--gray-6: oklch(from var(--base-gray) calc(l + 0.5) c h);
	--gray-7: oklch(from var(--base-gray) calc(l + 0.6) c h);
	--gray-8: oklch(from var(--base-gray) calc(l + 0.7) c h);
}

/* #region .corner-only { */ /*
	--s: 50px; /* the size on the corner */ /*
	--t: 5px; /* the thickness of the border */ /*
	--g: 20px; /* the gap between the border and image */ /*
	/* padding: calc(var(--g) + var(--t)); */ /*
	outline: var(--t) solid #0000; /* the color here */ /*
	outline-offset: calc(-1 * var(--t));
	-webkit-mask:
		conic-gradient(at var(--s) var(--s), #0000 75%, #000 0) 0 0 /
			calc(100% - var(--s)) calc(100% - var(--s)),
		linear-gradient(#000 0 0) content-box;
	transition: 0.4s;
	cursor: pointer;
}

div.corner-only:hover {
	outline-offset: calc(var(--g) / -1);
	outline-color: #ff0;
} */
/* #endregion */
